version: '3'

services:

  mysql:
    image: mysql:8.1.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass123
      MYSQL_DATABASE: post-hub-app
      MYSQL_PASSWORD: pass123
      MYSQL_ALLOW_PUBLIC_KEY_RETRIEVAL: "false"
      MYSQL_SSL: "false"
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - migration

  flyway:
    image: flyway/flyway
    container_name: flyway
    volumes:
      - ./migrations:/flyway/sql
    environment:
      FLYWAY_URL: jdbc:mysql://mysql:3306/post-hub-app?allowPublicKeyRetrieval=true&useSSL=false
      FLYWAY_USER: root
      FLYWAY_PASSWORD: pass123
      MYSQL_ALLOW_PUBLIC_KEY_RETRIEVAL: "false"
      MYSQL_SSL: "false"
    command: migrate
    depends_on:
      - mysql
    networks:
      - migration

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9091:9091"
    depends_on:
      - zookeeper
    volumes:
      - ../scripts/kafka:/docker-entrypoint-initdb.d
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9091,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
volumes:
  mysql-data:

networks:
  migration: